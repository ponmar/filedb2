<UserControl x:Class="FileDB.View.LocationsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:FileDB.View"
             xmlns:rs="clr-namespace:FileDB.Resources"
             xmlns:converters="clr-namespace:FileDB.Converters"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors" xmlns:viewmodel="clr-namespace:FileDB.ViewModel" d:DataContext="{d:DesignInstance Type=viewmodel:LocationsViewModel}"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
        <converters:ValueToBoolConverter x:Key="ValueToBoolConverter"/>
    </UserControl.Resources>

    <DockPanel>
        <TextBlock DockPanel.Dock="Top" Style="{StaticResource PageHeading}" Text="{x:Static rs:Strings.LocationsTitle}"/>
        <ScrollViewer PreviewMouseWheel="ScrollViewer_PreviewMouseWheel">
            <Border Style="{StaticResource BorderGroup}" HorizontalAlignment="Left" VerticalAlignment="Top">
                <StackPanel Style="{StaticResource PageStackPanel}">
                    <StackPanel Orientation="Horizontal" Visibility="{Binding ReadWriteMode, Converter={StaticResource BoolToVis}}">
                        <Button Style="{StaticResource NormalButton}" Margin="10" Command="{Binding AddLocationCommand}" Content="{x:Static rs:Strings.LocationsAddButton}"/>
                        <Button Style="{StaticResource NormalButton}" Margin="10" Command="{Binding EditLocationCommand}" IsEnabled="{Binding SelectedLocation, Converter={StaticResource ValueToBoolConverter}}" Content="{x:Static rs:Strings.LocationsEditButton}"/>
                        <Button Style="{StaticResource NormalButton}" Margin="10" Command="{Binding RemoveLocationCommand}" IsEnabled="{Binding SelectedLocation, Converter={StaticResource ValueToBoolConverter}}" Content="{x:Static rs:Strings.LocationsDeleteButton}"/>
                        <Button Style="{StaticResource NormalButton}" Margin="10" Command="{Binding ShowLocationOnMapCommand}" IsEnabled="{Binding SelectedLocationHasPosition}" Content="{x:Static rs:Strings.LocationsShowOnMapButton}"/>
                    </StackPanel>

                    <DataGrid Margin="10" ItemsSource="{Binding Locations}" GridLinesVisibility="Horizontal" CanUserResizeColumns="False" CanUserResizeRows="False" CanUserDeleteRows="False" IsReadOnly="True" SelectionMode="Single" AutoGenerateColumns="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="{x:Static rs:Strings.LocationsIdHeader}" Binding="{Binding Id}"/>
                            <DataGridTextColumn Header="{x:Static rs:Strings.LocationsNameHeader}" Binding="{Binding Name}"/>
                            <DataGridTextColumn Header="{x:Static rs:Strings.LocationsDescriptionHeader}" Binding="{Binding Description}"/>
                            <DataGridTextColumn Header="{x:Static rs:Strings.LocationsPositionHeader}" Binding="{Binding Position}"/>
                        </DataGrid.Columns>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding LocationSelectionCommand}" CommandParameter="{Binding Path=SelectedItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </DataGrid>
                </StackPanel>
            </Border>
        </ScrollViewer>
    </DockPanel>
</UserControl>
